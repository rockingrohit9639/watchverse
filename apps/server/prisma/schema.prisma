generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String
  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  File      File[]
  channels  Channel[]

  @@map("users")
}

model File {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  originalName String
  encoding     String
  mimeType     String
  filename     String
  size         Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  uploadedBy     User      @relation(fields: [uploadedById], references: [id], onDelete: Cascade)
  uploadedById   String    @db.ObjectId
  channelLogos   Channel[] @relation(name: "ChannelLogo")
  channelBanners Channel[] @relation(name: "ChannelBanner")

  @@map("files")
}

model Channel {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(false)

  createdBy   User    @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String  @db.ObjectId
  logo        File    @relation(fields: [logoId], references: [id], name: "ChannelLogo")
  logoId      String  @db.ObjectId
  banner      File?   @relation(fields: [bannerId], references: [id], name: "ChannelBanner")
  bannerId    String? @db.ObjectId

  @@map("channels")
}
